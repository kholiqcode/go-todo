// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2

package querier

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type TodosPriority string

const (
	TodosPriorityVeryHigh TodosPriority = "very-high"
	TodosPriorityMedium   TodosPriority = "medium"
	TodosPriorityHigh     TodosPriority = "high"
	TodosPriorityLow      TodosPriority = "low"
	TodosPriorityVeryLow  TodosPriority = "very-low"
)

func (e *TodosPriority) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TodosPriority(s)
	case string:
		*e = TodosPriority(s)
	default:
		return fmt.Errorf("unsupported scan type for TodosPriority: %T", src)
	}
	return nil
}

type NullTodosPriority struct {
	TodosPriority TodosPriority
	Valid         bool // Valid is true if TodosPriority is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullTodosPriority) Scan(value interface{}) error {
	if value == nil {
		ns.TodosPriority, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.TodosPriority.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullTodosPriority) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.TodosPriority), nil
}

type Activity struct {
	ID        int32        `json:"id"`
	Title     string       `json:"title"`
	Email     string       `json:"email"`
	CreatedAt sql.NullTime `json:"created_at"`
	UpdatedAt sql.NullTime `json:"updated_at"`
}

type Todo struct {
	ID              int32         `json:"id"`
	ActivityGroupID int32         `json:"activity_group_id"`
	Title           string        `json:"title"`
	IsActive        bool          `json:"is_active"`
	Priority        TodosPriority `json:"priority"`
	CreatedAt       sql.NullTime  `json:"created_at"`
	UpdatedAt       sql.NullTime  `json:"updated_at"`
}
