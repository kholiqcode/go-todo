// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"database/sql"
	"github.com/go-chi/chi/v5"
	"github.com/kholiqcode/go-todolist/internal/activityGroup/delivery/http/v1"
	"github.com/kholiqcode/go-todolist/internal/activityGroup/repository"
	"github.com/kholiqcode/go-todolist/internal/activityGroup/service"
	"github.com/kholiqcode/go-todolist/internal/app"
	v1_2 "github.com/kholiqcode/go-todolist/internal/todo/delivery/http/v1"
	querier2 "github.com/kholiqcode/go-todolist/internal/todo/repository"
	service2 "github.com/kholiqcode/go-todolist/internal/todo/service"
	"github.com/kholiqcode/go-todolist/utils"
)

// Injectors from injector.go:

func InitializeApp(route *chi.Mux, DB *sql.DB, config *utils.BaseConfig) (app.HttpServer, error) {
	activityGroupRepoImpl, err := querier.ProvideActivityGroupRepo(DB)
	if err != nil {
		return nil, err
	}
	activityGroupServiceImpl, err := service.ProvideActivityGroupService(activityGroupRepoImpl)
	if err != nil {
		return nil, err
	}
	activityGroupHandlerImpl, err := v1.ProvideActivityGroupHandler(route, activityGroupServiceImpl)
	if err != nil {
		return nil, err
	}
	todoRepoImpl, err := querier2.ProvideTodoRepo(DB)
	if err != nil {
		return nil, err
	}
	todoServiceImpl, err := service2.ProvideTodoService(todoRepoImpl)
	if err != nil {
		return nil, err
	}
	todoHandlerImpl, err := v1_2.ProvideTodoHandler(route, todoServiceImpl)
	if err != nil {
		return nil, err
	}
	httpServerImpl, err := app.ProvideHttpServer(route, config, activityGroupHandlerImpl, todoHandlerImpl)
	if err != nil {
		return nil, err
	}
	return httpServerImpl, nil
}
